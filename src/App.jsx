import { useState } from 'react'
import logo from './logo.svg'
import './App.css'
import { One } from './one'
import { Two } from './two'
import { Three } from './three'
import { Routes, Route, Link } from 'react-router-dom';

function App() {
  const [count, setCount] = useState(0)

  function increase(){
    setCount(prev=>prev+1)
  }
// inserting -  npm install react-router-dom in project directory

// без роутер при переходе по ссылкам между страницами 
// полностью перезагружается страница (браузером)

// роуте создает одностраничное спа приложение -- значит сайт состоит из одной страницы

// обернуть главный комопнент в <BrowserRouter> (предварительно импортировав)
  // он дает контеск который считывает линк даже в отдельном компоенте не в апп 
// в индекс джс

//  отображаются комопоеннты в апп 
//  в апп могут быть комопоненты которые всегда на старнце (на всех странциах
//например хедер и менйт внутри которого меняется содеирмжоже с помощью роутер)

// навигается строится по структур nav - ul - li - ссылка
// для сркинридеров нав сообщает что навигация 
// а ul что следует группа взаимосвязанных элементов


// линк компонент для навигации 
// роутс контейнер для всего 

// ЛИНК ЭТО ССЫЛКА свойство ту указывает куда будетп переход 


//при переходе между страницами происходит размонтирование компонента
// * но апп не будет размонтироваться


// иногда данные должны быть частью юрл (айди какая то )
// КОГДА ДАННЫЕ ДОЛЖНЫЕ БЫТЬ ЧАСТЬЮ URL
{/* <Route path='/one/:userId'></Route> */}
// нужно добавить в роут динамический сегмент
// в роует ставить имя параметра и перед ним : что бы дать понять что это параметр
// - это значит что все что после двоеточия будет помещено в переменную userId
// - внутри комопонента на который ведет ссылка нужно исопльзовать хук useParams 
// чтобы получить значение переменной 
// const { userId } = useParams(); далее используется как реакт переменнаяв компоненте
//  будет виден пр ипереходе с других страниц (других ссылок) ,
// т к привязан к маршрушуту и рабоатет для всех ссылок везде

// чтобы передать данные которые НЕ ДОЛЖНЫ БЫТЬ ЧАСТЮ url 
// используется стейт свойство комопнента линк (синтаксис как стайл)
// НЕ будет виден пр ипереходе с других страниц (других ссылок),
// т к приязан к ссылке

  return (
    <div className="App">
      <nav>
        <ul>
          <li>
            <Link to={"/"}> home </Link>
          </li>
          {/* оставляем без роута чтобы сделать апп дефолтным если роут то будет 
          может быть ошибка постовянный вызов */}
          {/* to работает как якорная ссылка перевод по нужному адресу (вместо айди)
          а сам адресу прикрепляется к компоненту в апп (в роут) */}

          <li>
            <Link state={{nourlid:'01'}} to={"/one/1"}>
              {" "}
              one{" "}
            </Link>
          </li>
          <li>
            <Link onClick={increase} state={{nourlid:'02'}} to={"/one/2"}>
              {" "}
              one{" "}
            </Link>
          </li>

          {/* можно так если, много
          {[1,2].map(e=><li><Link to={`/one/${e}`}> one </Link></li>)} */}

          <li>
            <Link to={"/two"}> two </Link>
          </li>
          <li>
            <Link to={"/three"}>three</Link>
          </li>
        </ul>
      </nav>

      <Routes>
        <Route
          path="/one/:id"
          element={<One increase={increase} count={count}></One>}
        ></Route>
        <Route path="/two" element={<Two></Two>}></Route>
        <Route path="/three" element={<Three></Three>}></Route>
      </Routes>
    </div>
  );
}

export default App
